<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:p="http://www.springframework.org/schema/p" xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.1.xsd http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd">

    <context:annotation-config/>
    <!-- 指定IOC容器扫描包 -->
    <context:component-scan base-package="com.hezier.demo"/>

    <bean id="userBean" class="com.hezier.demo.bean.UserBean" p:name="Hezier" p:password="zhuzhenghao"/>

    <!--Spring连接数据库配置-->
    <!--<bean id="myDataSource" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">-->
    <!--&lt;!&ndash; results in a setDriverClassName(String) call &ndash;&gt;-->
    <!--<property name="driverClassName" value="com.mysql.jdbc.Driver"/>-->
    <!--<property name="url" value="jdbc:mysql://localhost:3306/mydb"/>-->
    <!--<property name="username" value="root"/>-->
    <!--<property name="password" value="masterkaoli"/>-->
    <!--</bean>-->

    <!--<bean id="myDataSource" class="org.apache.commons.dbcp.BasicDataSource"-->
    <!--destroy-method="close"-->
    <!--p:driverClassName="com.mysql.jdbc.Driver"-->
    <!--p:url="jdbc:mysql://localhost:3306/mydb"-->
    <!--p:username="root"-->
    <!--p:password="masterkaoli"/>-->
    <!---->
    <bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">
        <property name="driverClassName" value="com.mysql.jdbc.Driver"/>
        <property name="url" value="jdbc:mysql://localhost:3306/springexample"/>
        <property name="username" value="root"/>
        <!-- property池启动时的初始值  -->
        <property name="password" value="root"/>
        <!-- 连接name="initialSize" value="${initialSize}"/>-->
        <!--<property name="initialSize" value="1"/>-->
        <!--&lt;!&ndash; 连接池的最大值 &ndash;&gt;-->
        <!--<property name="maxActive" value="500"/>-->
        <!--&lt;!&ndash; 最大空闲值.当经过一个高峰时间后，连接池可以慢慢将已经用不到的连接慢慢释放一部分，一直减少到maxIdle为止 &ndash;&gt;-->
        <!--<property name="maxIdle" value="2"/>-->
        <!--&lt;!&ndash;  最小空闲值.当空闲的连接数少于阀值时，连接池就会预申请去一些连接，以免洪峰来时来不及申请 &ndash;&gt;-->
        <!--<property name="minIdle" value="1"/>-->
    </bean>

    <bean id="sessionFactory" class="org.springframework.orm.hibernate4.LocalSessionFactoryBean" lazy-init="false">
        <!-- 注入datasource，给sessionfactoryBean内setdatasource提供数据源 -->
        <property name="dataSource" ref="dataSource"/>
        <property name="configLocation" value="classpath:hibernate.cfg.xml"/>
        <!-- //加载实体类的映射文件位置及名称 -->
        <property name="mappingLocations" value="classpath:com/hezier/demo/bean/*.hbm.xml"/>
        <!--<property name="hibernateProperties">-->
        <!--<props>-->
        <!--<prop key="hibernate.autoReconnect">true</prop>-->
        <!--</props>-->
        <!--</property>-->
    </bean>

    <!-- 配置Spring声明式事务 -->
    <bean id="transactionManager" class="org.springframework.orm.hibernate4.HibernateTransactionManager">
        <property name="sessionFactory" ref="sessionFactory"/>
    </bean>

    <!-- 配置事务事务属性 -->
    <tx:advice id="txAdvice" transaction-manager="transactionManager">
        <tx:attributes>
            <tx:method name="get*" read-only="true"/>
            <tx:method name="*"/>
        </tx:attributes>
    </tx:advice>

    <aop:config>
        <!--TODO:-->
        <aop:pointcut expression="execution(* com.hezier.demo.dao.*.*(..))" id="txPointcut"/>
        <aop:advisor advice-ref="txAdvice" pointcut-ref="txPointcut"/>
    </aop:config>

    <!-- aop配置 -->
    <!--<aop:config proxy-target-class="true">-->
    <!--&lt;!&ndash;切面 &ndash;&gt;-->
    <!--<aop:aspect ref="advices">-->
    <!--&lt;!&ndash; 切点 &ndash;&gt;-->
    <!--<aop:pointcut expression="execution(* com.hezier.demo.aop.Math.*(..))" id="pointcut1"/>-->
    <!--&lt;!&ndash;连接通知方法与切点 &ndash;&gt;-->
    <!--<aop:before method="before" pointcut-ref="pointcut1"/>-->
    <!--<aop:after method="after" pointcut-ref="pointcut1"/>-->
    <!--</aop:aspect>-->
    <!--</aop:config>-->
    <!-- 配置事务切点，并把切点和事务属性关联起来 -->

    <aop:aspectj-autoproxy proxy-target-class="true"/>

    <bean id="txManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource"/>
    </bean>

    <tx:annotation-driven transaction-manager="txManager"/>


    <!--<bean id="personService" class="com.hezier.demo.service.PersonServiceImpl">-->
    <!--<property name="dataSource" ref="dataSource"/>-->
    <!--</bean>-->

    <!--Zoo Test-->
    <!--<bean id="zoo" class="com.hezier.demo.bean.Zoo">-->
    <!--<property name="monkey" ref="monkey"/>-->
    <!--<property name="tiger" ref="tiger"/>-->
    <!--</bean>-->

    <!--<bean id="tiger" class="com.hezier.demo.bean.Tiger"/>-->
    <!--<bean id="monkey" class="com.hezier.demo.bean.Monkey"/>-->

</beans>